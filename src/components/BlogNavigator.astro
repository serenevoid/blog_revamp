---
import { getCollection } from 'astro:content';
import BlogCard from './BlogCard.astro';

const blogs = (await getCollection('blog')).sort(
	(a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf()
);
const { currentTitle = '' } = Astro.props
let tags: string[] = [];
let similarBlogs: typeof blogs = [];
for (let i = 0; i < blogs.length; i++) {
  if (blogs[i].data.title == currentTitle) {
    tags = blogs[i].data.tags;
    break;
  }
}
for (let i = 0; i < blogs.length; i++) {
  for (let tag of blogs[i].data.tags) {
    if (blogs[i].data.title != currentTitle) {
      if (tags.includes(tag) && !similarBlogs.includes(blogs[i])) {
        similarBlogs.push(blogs[i]);
      }
    }
  }
}
let i = 0;
while (similarBlogs.length < 2) {
  if (blogs[i].data.title != currentTitle) {
    similarBlogs.push(blogs[i++])
  }
}
let currentIndex = similarBlogs.length;
while (currentIndex != 0) {
  let randomIndex = Math.floor(Math.random() * currentIndex);
  currentIndex--;
  [similarBlogs[currentIndex], similarBlogs[randomIndex]] = [
    similarBlogs[randomIndex], similarBlogs[currentIndex]];
}
---
<BlogCard className="" blogs={similarBlogs.slice(0,2)} />
